generator client {
    provider = "prisma-client-js"
  }
  
  datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
  }
  
  model User {
    id        Int      @id @default(autoincrement())
    username  String   @unique
    email     String   @unique
    password  String 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name      String?
    profilePicture String? @default("")
    bio String? @default("")
    followers     Follow[]  @relation("FollowingUser")
    following     Follow[]  @relation("FollowedUser")
    replies Reply[]
    likes Like[]
    posts Post[]
  }
  
  model Follow {
    id String @id @default(cuid())
    followerId Int
    follower User @relation("FollowingUser", fields: [followerId], references: [id])
    followedId  Int
    followed    User   @relation("FollowedUser", fields: [followedId], references: [id])
  
    @@unique([followedId, followerId])
  }
  
  model Post {
    id String @id @default(cuid())
    content String
    imageUrl String?
    createdAt DateTime @default(now())
    updatedAt DateTime  @updatedAt
    userId Int
    user User @relation(fields: [userId], references: [id])
    replies Reply[]
    likes Like[]
  } 
  
  model Reply {
    id String @id @default(cuid())
    content String 
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId Int
    user User @relation(fields: [userId], references: [id])
    postId String
    post Post @relation(fields: [postId], references: [id])
  }
  model Like {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    userId Int
    user User @relation(fields: [userId], references: [id])
    postId String
    post Post @relation(fields: [postId], references: [id])
  
    @@unique([userId, postId])
  }